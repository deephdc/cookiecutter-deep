{
    "git_base_url": "https://github.com/deephdc",
    "project_name": "",
    "author_name": "",
    "author_email": "",
    "description": "",
    "app_version": "0.0.1",
    "open_source_license": ["MIT", "Apache 2.0", "BSD-3-Clause", "No license file"],
    "dockerhub_user": "deephdc",
    "docker_baseimage": "tensorflow/tensorflow",
    "baseimage_cpu_tag": "2.9.1",
    "baseimage_gpu_tag": "2.9.1-gpu",
    "failure_notify": ["no", "yes"],
    
    "__repo_name": "{{ cookiecutter.project_name.lower().replace(' ', '_').replace('-','_') }}",

    "__prompts__": {
        "git_base_url": "git_base_url - Remote URL to host your new repositories (git), e.g.\n       https://github.com/deephdc (i.e. at github)\n       https://git.scc.kit.edu/deep (or somewhere else)\n",
        "project_name": "project_name - Short name of your project. It also defines name of the repository, which will be added after \"git_base_url\" (see above)",
        "author_name": "author_name - Author name(s) (and/or your organization/company/team). If many, separate by comma",
        "author_email": "author_email - E-Mail(s) of main author(s). If many, separate by comma",
        "description": "description - A short description of the project",
        "app_version": "app_version - Application version (expects X.Y.Z (Major.Minor.Patch))",
        "open_source_license": "open_source_license - Select one of the licenses, default is MIT. For more info: https://opensource.org/licenses",
        "dockerhub_user": "dockerhub_user - User account at hub.docker.com, e.g. 'deephdc' in https://hub.docker.com/u/deephdc",
        "docker_baseimage": "docker_baseimage - Docker image your Dockerfile starts from (FROM <docker_baseimage>). Don't provide the tag, yet",
        "baseimage_cpu_tag": "baseimage_cpu_tag - CPU tag for the baseimage, e.g. 2.9.1. Has to match python3!",
        "baseimage_gpu_tag": "baseimage_gpu_tag - GPU tag for the baseimage, e.g. 2.9.1-gpu. Has to match python3!",
        "failure_notify": "failure_notify - Receive an email if module build fails"
    }
}
